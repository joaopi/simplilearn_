{
	"AWSTemplateFormatVersion": "2010-09-09",

	"Description": "AWS CloudFormation AutoScaling EC2 CloudWatch: Create a load balanced, Auto Scaled website based on custom CloudWatch metrics. Creates an Auto Scaling group behind a load balancer, scaling EC2 instances depending on cpu load and http requests to the website. ",

	"Parameters": {
		"VpcId": {
			"Type": "AWS::EC2::VPC::Id",
			"Description": "VpcId of your existing Virtual Private Cloud (VPC)",
			"ConstraintDescription": "must be the VPC Id of an existing Virtual Private Cloud."
		},

		"Subnets": {
			"Type": "List<AWS::EC2::Subnet::Id>",
			"Description": "The list of SubnetIds in your Virtual Private Cloud (VPC)",
			"ConstraintDescription": "must be a list of at least two existing subnets associated with at least two different availability zones. They should be residing in the selected Virtual Private Cloud."
		},

		"KeyName": {
			"Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
			"Type": "AWS::EC2::KeyPair::KeyName",
			"MinLength": "1",
			"MaxLength": "255",
			"AllowedPattern": "[\\x20-\\x7E]*",
			"ConstraintDescription": "can contain only ASCII characters."
		},

		"SSHLocation": {
			"Description": "The IP address range that can be used to SSH to the EC2 instances",
			"Type": "String",
			"MinLength": "9",
			"MaxLength": "18",
			"Default": "0.0.0.0/0",
			"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
			"ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
		},
		
		"CPUPolicySCaleOutTargetValue":{
		"Description" : "CPU load scaling out threshold",
		"Default": "10",
		"Type":"String"
		},
		
		"CPUPolicySCaleInTargetValue":{
		"Description" : "CPU load scaling in threshold",
		"Default": "2",
		"Type":"String"
		},
		"ALBRequestCountTargetValue":{
		"Description" : "Request count scaling threshold",
		"Default": "3",
		"Type":"String"
		}
	},

	"Mappings": {
		"AWSRegionArch2AMI": {
			"af-south-1": {
				"AMI": "ami-064cc455f8a1ef504"
			},
			"ap-east-1": {
				"AMI": "ami-f85b1989"
			},
			"ap-northeast-1": {
				"AMI": "ami-0b2c2a754d5b4da22"
			},
			"ap-northeast-2": {
				"AMI": "ami-0493ab99920f410fc"
			},
			"ap-northeast-3": {
				"AMI": "ami-01344f6f63a4decc1"
			},
			"ap-south-1": {
				"AMI": "ami-03cfb5e1fb4fac428"
			},
			"ap-southeast-1": {
				"AMI": "ami-0ba35dc9caf73d1c7"
			},
			"ap-southeast-2": {
				"AMI": "ami-0ae99b503e8694028"
			},
			"ca-central-1": {
				"AMI": "ami-0803e21a2ec22f953"
			},
			"cn-north-1": {
				"AMI": "ami-07a3f215cc90c889c"
			},
			"cn-northwest-1": {
				"AMI": "ami-0a3b3b10f714a0ff4"
			},
			"eu-central-1": {
				"AMI": "ami-0474863011a7d1541"
			},
			"eu-north-1": {
				"AMI": "ami-0de4b8910494dba0f"
			},
			"eu-south-1": {
				"AMI": "ami-08427144fe9ebdef6"
			},
			"eu-west-1": {
				"AMI": "ami-015232c01a82b847b"
			},
			"eu-west-2": {
				"AMI": "ami-0765d48d7e15beb93"
			},
			"eu-west-3": {
				"AMI": "ami-0caf07637eda19d9c"
			},
			"me-south-1": {
				"AMI": "ami-0744743d80915b497"
			},
			"sa-east-1": {
				"AMI": "ami-0a52e8a6018e92bb0"
			},
			"us-east-1": {
				"AMI": "ami-032930428bf1abbff"
			},
			"us-east-2": {
				"AMI": "ami-027cab9a7bf0155df"
			},
			"us-west-1": {
				"AMI": "ami-088c153f74339f34c"
			},
			"us-west-2": {
				"AMI": "ami-01fee56b22f308154"
			}
		}
	},

    "Resources" : {
        "WebServerGroup" : {
          "Type" : "AWS::AutoScaling::AutoScalingGroup",
          "Properties" : {
            "VPCZoneIdentifier" : { "Ref" : "Subnets" },
            "LaunchConfigurationName" : { "Ref" : "LaunchConfig" },
            "DesiredCapacity": "1",
            "MinSize" : "1",
            "MaxSize" : "3",
            "TargetGroupARNs" : [ { "Ref" : "ALBTargetGroup" } ]
          },
          "CreationPolicy" : {
            "ResourceSignal" : {
              "Timeout" : "PT15M",
              "Count"   : "1"
            }
          },
          "UpdatePolicy": {
            "AutoScalingRollingUpdate": {
              "MinInstancesInService": "1",
              "MaxBatchSize": "1",
              "PauseTime" : "PT15M",
              "WaitOnResourceSignals": "true"
            }
          }
        },
    
        "LaunchConfig" : {
          "Type" : "AWS::AutoScaling::LaunchConfiguration",
          "Metadata" : {
            "AWS::CloudFormation::Init" : {
              "config" : {
                "packages" : {
                  "yum" : {
                    "httpd" : []
                  }
                },
    
                "files" : {
                  "/var/www/html/index.html" : {
                    "content" : "<h1>Congratulations, you have successfully login Hotstar application.</h1>",
                    "mode"    : "000644",
                    "owner"   : "root",
                    "group"   : "root"
                  },
    
                  "/etc/cfn/cfn-hup.conf" : {
                    "content" : { "Fn::Join" : ["", [
                      "[main]\n",
                      "stack=", { "Ref" : "AWS::StackId" }, "\n",
                      "region=", { "Ref" : "AWS::Region" }, "\n"
                    ]]},
                    "mode"    : "000400",
                    "owner"   : "root",
                    "group"   : "root"
                  },
    
                  "/etc/cfn/hooks.d/cfn-auto-reloader.conf" : {
                    "content": { "Fn::Join" : ["", [
                      "[cfn-auto-reloader-hook]\n",
                      "triggers=post.update\n",
                      "path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init\n",
                      "action=/opt/aws/bin/cfn-init -v ",
                      "         --stack ", { "Ref" : "AWS::StackName" },
                      "         --resource LaunchConfig ",
                      "         --region ", { "Ref" : "AWS::Region" }, "\n",
                      "runas=root\n"
                    ]]},
                    "mode"    : "000400",
                    "owner"   : "root",
                    "group"   : "root"
                  }
                },
    
                "services" : {
                  "sysvinit" : {
                    "httpd"    : { "enabled" : "true", "ensureRunning" : "true" },
                    "cfn-hup" : { "enabled" : "true", "ensureRunning" : "true",
                                  "files" : ["/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf"]}
                  }
                }
              }
            }
          },
          "Properties" : {
            "KeyName" : { "Ref" : "KeyName" },
            "ImageId": {
                "Fn::FindInMap": ["AWSRegionArch2AMI", {
                    "Ref": "AWS::Region"
                }, "AMI"]
            },
            "SecurityGroups" : [ { "Ref" : "InstanceSecurityGroup" } ],
            "InstanceType": "t2.micro",
            "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
                 "#!/bin/bash -xe\n",
                 "yum update -y aws-cfn-bootstrap\n",
    
                 "yum update -y aws-cli\n",
    
                 "/opt/aws/bin/cfn-init -v ",
                 "         --stack ", { "Ref" : "AWS::StackName" },
                 "         --resource LaunchConfig ",
                 "         --region ", { "Ref" : "AWS::Region" }, "\n",
    
                 "/opt/aws/bin/cfn-signal -e $? ",
                 "         --stack ", { "Ref" : "AWS::StackName" },
                 "         --resource WebServerGroup ",
                 "         --region ", { "Ref" : "AWS::Region" }, "\n"
            ]]}}
          }
        },
    
        "WebServerScaleUpPolicy" : {
          "Type" : "AWS::AutoScaling::ScalingPolicy",
          "Properties" : {
            "AdjustmentType" : "ChangeInCapacity",
            "AutoScalingGroupName" : { "Ref" : "WebServerGroup" },
            "Cooldown" : "60",
            "ScalingAdjustment" : "1"
          }
        },
        "WebServerScaleDownPolicy" : {
          "Type" : "AWS::AutoScaling::ScalingPolicy",
          "Properties" : {
            "AdjustmentType" : "ChangeInCapacity",
            "AutoScalingGroupName" : { "Ref" : "WebServerGroup" },
            "Cooldown" : "60",
            "ScalingAdjustment" : "-1"
          }
        },
    
        "CPUAlarmHigh": {
         "Type": "AWS::CloudWatch::Alarm",
         "Properties": {
            "AlarmDescription": "Scale-up if CPU is above configured threshold for 1 minute",
            "MetricName": "CPUUtilization",
            "Namespace": "AWS/EC2",
            "Statistic": "Average",
            "Period": "30",
            "EvaluationPeriods": "2",
            "Threshold" : {
                "Ref":"CPUPolicySCaleOutTargetValue"
            },
            "AlarmActions": [ { "Ref": "WebServerScaleUpPolicy" } ],
            "Dimensions": [
              {
                "Name": "AutoScalingGroupName",
                "Value": { "Ref": "WebServerGroup" }
              }
            ],
            "ComparisonOperator": "GreaterThanThreshold"
          }
        },
        "CPUAlarmLow": {
         "Type": "AWS::CloudWatch::Alarm",
         "Properties": {
            "AlarmDescription": "Scale-down if CPU is below configured threshold for 1 minute",
            "MetricName": "CPUUtilization",
            "Namespace": "AWS/EC2",
            "Statistic": "Average",
            "Period": "30",
            "EvaluationPeriods": "2",
            "Threshold" : {
                "Ref":"CPUPolicySCaleInTargetValue"
            },
            "AlarmActions": [ { "Ref": "WebServerScaleDownPolicy" } ],
            "Dimensions": [
              {
                "Name": "AutoScalingGroupName",
                "Value": { "Ref": "WebServerGroup" }
              }
            ],
            "ComparisonOperator": "LessThanThreshold"
          }
        },
    
        "ApplicationLoadBalancer" : {
          "Type" : "AWS::ElasticLoadBalancingV2::LoadBalancer",
          "Properties" : {
            "SecurityGroups": [{ "Ref" : "ALBSecurityGroup"} ],
            "Subnets" : { "Ref" : "Subnets"}
          }
        },
    
        "ALBListener" : {
          "Type" : "AWS::ElasticLoadBalancingV2::Listener",
          "Properties" : {
            "DefaultActions" : [{
              "Type" : "forward",
              "TargetGroupArn" : { "Ref" : "ALBTargetGroup" }
            }],
            "LoadBalancerArn" : { "Ref" : "ApplicationLoadBalancer" },
            "Port" : "80",
            "Protocol" : "HTTP"
          }
        },
    
        "ALBTargetGroup" : {
          "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
          "Properties" : {
            "HealthCheckIntervalSeconds" : 30,
            "HealthCheckTimeoutSeconds" : 5,
            "HealthyThresholdCount" : 3,
            "Port" : 80,
            "Protocol" : "HTTP",
            "UnhealthyThresholdCount" : 5,
            "VpcId" : {"Ref" : "VpcId"}
          }
        },
    
        "ALBRequestCountPolicy":{
            "Type":"AWS::AutoScaling::ScalingPolicy",
            "DependsOn":  "ALBListener",
            "Properties":{
                "AutoScalingGroupName" : { "Ref" : "WebServerGroup" },
                "PolicyType":"TargetTrackingScaling",
                "TargetTrackingConfiguration":{
                    "PredefinedMetricSpecification":{
                        "PredefinedMetricType":"ALBRequestCountPerTarget",
                        "ResourceLabel":{
                            "Fn::Join":[
                                "/",
                                [
                                    {
                                        "Fn::GetAtt":[
                                            "ApplicationLoadBalancer",
                                            "LoadBalancerFullName"
                                        ]
                                    },
                                    {
                                        "Fn::GetAtt":[
                                            "ALBTargetGroup",
                                            "TargetGroupFullName"
                                        ]
                                    }
                                ]
                            ]
                        }
                    },
                    "TargetValue":{
                        "Ref":"ALBRequestCountTargetValue"
                    }
                }
            }	
        },
    
        "ALBSecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
              "GroupDescription" : "Enable HTTP",
              "SecurityGroupIngress" : [
              {
                "IpProtocol" : "tcp",
                "FromPort" : "80",
                "ToPort" : "80",
                "CidrIp" : "0.0.0.0/0"
              }
             ],
              "VpcId" : { "Ref" : "VpcId" }
            }
        },
    
        "InstanceSecurityGroup" : {
          "Type" : "AWS::EC2::SecurityGroup",
          "Properties" : {
            "GroupDescription" : "Enable SSH access and HTTP",
            "SecurityGroupIngress" : [ {
              "IpProtocol" : "tcp",
              "FromPort" : "22",
              "ToPort" : "22",
              "CidrIp" : { "Ref" : "SSHLocation"}
            },
            {
              "IpProtocol" : "tcp",
              "FromPort" : "80",
              "ToPort" : "80",
              "CidrIp" : "0.0.0.0/0"
            } ],
            "VpcId" : { "Ref" : "VpcId" }
          }
        }
      },
    
    "Outputs" : {
        "URL" : {
          "Description" : "The URL of the website",
          "Value" :  { "Fn::Join" : [ "", [ "http://", { "Fn::GetAtt" : [
              "ApplicationLoadBalancer", "DNSName" ]}]]}
        }
    }
}

